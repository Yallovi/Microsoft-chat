{"version":3,"file":"mgt-teams-channel-picker.js","sourceRoot":"src/","sources":["components/mgt-teams-channel-picker/mgt-teams-channel-picker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  Providers,\n  ProviderState,\n  MgtTemplatedComponent,\n  BetaGraph,\n  customElement,\n  mgtHtml\n} from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport '../sub-components/mgt-spinner/mgt-spinner';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { debounce } from '../../utils/Utils';\nimport { styles } from './mgt-teams-channel-picker-css';\nimport { getAllMyTeams, getTeamsPhotosforPhotoIds } from './mgt-teams-channel-picker.graph';\nimport { strings } from './strings';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport {\n  fluentBreadcrumb,\n  fluentBreadcrumbItem,\n  fluentTreeView,\n  fluentTreeItem,\n  fluentCard,\n  fluentTextField\n} from '@fluentui/web-components';\n\nregisterFluentComponents(\n  fluentBreadcrumb,\n  fluentBreadcrumbItem,\n  fluentCard,\n  fluentTreeView,\n  fluentTreeItem,\n  fluentTextField\n);\n\n/**\n * Team with displayName\n *\n * @export\n * @interface SelectedChannel\n */\nexport type Team = MicrosoftGraph.Team & {\n  /**\n   * Display name Of Team\n   *\n   * @type {string}\n   */\n  displayName?: string;\n};\n\n/**\n * Selected Channel item\n *\n * @export\n * @interface SelectedChannel\n */\nexport interface SelectedChannel {\n  /**\n   * Channel\n   *\n   * @type {MicrosoftGraph.Channel}\n   * @memberof SelectedChannel\n   */\n  channel: MicrosoftGraph.Channel;\n\n  /**\n   * Team\n   *\n   * @type {MicrosoftGraph.Team}\n   * @memberof SelectedChannel\n   */\n  team: Team;\n}\n\n/**\n * Drop down menu item\n *\n * @export\n * @interface DropdownItem\n */\ninterface DropdownItem {\n  /**\n   * Teams channel\n   *\n   * @type {DropdownItem[]}\n   * @memberof DropdownItem\n   */\n  channels?: DropdownItem[];\n  /**\n   * Microsoft Graph Channel or Team\n   *\n   * @type {(MicrosoftGraph.Channel | MicrosoftGraph.Team)}\n   * @memberof DropdownItem\n   */\n  item: MicrosoftGraph.Channel | Team;\n}\n\n/**\n * Drop down menu item state\n *\n * @interface DropdownItemState\n */\ninterface ChannelPickerItemState {\n  /**\n   * Microsoft Graph Channel or Team\n   *\n   * @type {(MicrosoftGraph.Channel | MicrosoftGraph.Team)}\n   * @memberof ChannelPickerItemState\n   */\n  item: MicrosoftGraph.Channel | Team;\n  /**\n   * if dropdown item shows expanded state\n   *\n   * @type {boolean}\n   * @memberof DropdownItemState\n   */\n  isExpanded?: boolean;\n  /**\n   * If item contains channels\n   *\n   * @type {ChannelPickerItemState[]}\n   * @memberof DropdownItemState\n   */\n  channels?: ChannelPickerItemState[];\n  /**\n   * if Item has parent item (team)\n   *\n   * @type {ChannelPickerItemState}\n   * @memberof DropdownItemState\n   */\n  parent: ChannelPickerItemState;\n}\n\n/**\n * Configuration object for the TeamsChannelPicker component\n *\n * @export\n * @interface MgtTeamsChannelPickerConfig\n */\nexport interface MgtTeamsChannelPickerConfig {\n  /**\n   * Sets or gets whether the teams channel picker component should use\n   * the Teams based scopes instead of the User and Group based scopes\n   *\n   * @type {boolean}\n   */\n  useTeamsBasedScopes: boolean;\n}\n\n/**\n * Web component used to select channels from a User's Microsoft Teams profile\n *\n *\n * @class MgtTeamsChannelPicker\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<SelectedChannel | null>} selectionChanged - Fired when the selection changes\n *\n * @cssprop --color - {font} Default font color\n *\n * @cssprop --input-border - {String} Input section entire border\n * @cssprop --input-border-top - {String} Input section border top only\n * @cssprop --input-border-right - {String} Input section border right only\n * @cssprop --input-border-bottom - {String} Input section border bottom only\n * @cssprop --input-border-left - {String} Input section border left only\n * @cssprop --input-background-color - {Color} Input section background color\n * @cssprop --input-border-color--hover - {Color} Input border hover color\n * @cssprop --input-border-color--focus - {Color} Input border focus color\n *\n * @cssprop --dropdown-background-color - {Color} Background color of dropdown area\n * @cssprop --dropdown-item-hover-background - {Color} Background color of channel or team during hover\n * @cssprop --dropdown-item-selected-background - {Color} Background color of selected channel\n *\n * @cssprop --arrow-fill - {Color} Color of arrow svg\n * @cssprop --placeholder-color--focus - {Color} Color of placeholder text during focus state\n * @cssprop --placeholder-color - {Color} Color of placeholder text\n *\n */\n@customElement('teams-channel-picker')\nexport class MgtTeamsChannelPicker extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Global Configuration object for all\n   * teams channel picker components\n   *\n   * @static\n   * @type {MgtTeamsChannelPickerConfig}\n   * @memberof MgtTeamsChannelPicker\n   */\n  public static get config(): MgtTeamsChannelPickerConfig {\n    return this._config;\n  }\n\n  private static _config = {\n    useTeamsBasedScopes: false\n  };\n  private teamsPhotos = {};\n\n  /**\n   * Gets Selected item to be used\n   *\n   * @readonly\n   * @type {SelectedChannel}\n   * @memberof MgtTeamsChannelPicker\n   */\n  public get selectedItem(): SelectedChannel | null {\n    if (this._selectedItemState) {\n      return { channel: this._selectedItemState.item, team: this._selectedItemState.parent.item };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the scopes required for teams channel picker\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTeamsChannelPicker\n   */\n  public static get requiredScopes(): string[] {\n    if (this.config.useTeamsBasedScopes) {\n      return ['team.readbasic.all', 'channel.readbasic.all'];\n    } else {\n      return ['user.read.all', 'group.read.all'];\n    }\n  }\n\n  private set items(value) {\n    if (this._items === value) {\n      return;\n    }\n    this._items = value;\n    this._treeViewState = value ? this.generateTreeViewState(value) : [];\n    this.resetFocusState();\n  }\n  private get items(): DropdownItem[] {\n    return this._items;\n  }\n\n  // User input in search\n  private get _input(): HTMLInputElement {\n    const wrapper = this.renderRoot.querySelector<HTMLElement>('fluent-text-field');\n    const input = wrapper.shadowRoot.querySelector<HTMLInputElement>('input');\n    return input;\n  }\n  private _inputValue: string = '';\n\n  @state() private _selectedItemState: ChannelPickerItemState;\n  private _items: DropdownItem[];\n  private _treeViewState: ChannelPickerItemState[] = [];\n  private _focusList: ChannelPickerItemState[] = [];\n\n  // focus state\n  private debouncedSearch;\n\n  // determines loading state\n  @state() private _isDropdownVisible: boolean;\n  @state() private _isFocused: boolean;\n\n  constructor() {\n    super();\n    this.handleWindowClick = this.handleWindowClick.bind(this);\n    this.addEventListener('focus', _ => this.loadTeamsIfNotLoaded());\n    this.addEventListener('mouseover', _ => this.loadTeamsIfNotLoaded());\n    this.addEventListener('blur', _ => this.lostFocus());\n    this.clearState();\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtTeamsChannelPicker\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this.handleWindowClick);\n\n    const ownerDocument = this.renderRoot.ownerDocument;\n    if (ownerDocument) {\n      ownerDocument.documentElement.setAttribute('dir', this.direction);\n    }\n  }\n\n  /**\n   * Invoked each time the custom element is disconnected from the document's DOM\n   *\n   * @memberof MgtTeamsChannelPicker\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('click', this.handleWindowClick);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * selects a channel by looking up the id in the Graph\n   *\n   * @param {string} channelId MicrosoftGraph.Channel.id\n   * @returns {Promise<return>} A promise that will resolve to true if channel was selected\n   * @memberof MgtTeamsChannelPicker\n   */\n  public async selectChannelById(channelId: string): Promise<boolean> {\n    const provider = Providers.globalProvider;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // since the component normally handles loading on hover, forces the load for items\n      if (!this.items) {\n        await this.requestStateUpdate();\n      }\n\n      for (const item of this._treeViewState) {\n        for (const channel of item.channels) {\n          if (channel.item.id === channelId) {\n            item.isExpanded = true;\n            this.selectChannel(channel);\n            this.markSelectedChannelInDropdown(channelId);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Marks a channel selected by ID as selected in the dropdown menu.\n   * It ensures the parent team is set to as expanded to show the channel.\n   * @param channelId ID string of the selected channel\n   */\n  private markSelectedChannelInDropdown(channelId: string) {\n    const treeItem = this.renderRoot.querySelector(`[id='${channelId}']`) as HTMLElement;\n    if (treeItem) {\n      treeItem.setAttribute('selected', 'true');\n      if (treeItem.parentElement) {\n        treeItem.parentElement.setAttribute('expanded', 'true');\n      }\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update.\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  public render() {\n    const dropdownClasses = {\n      dropdown: true,\n      visible: this._isDropdownVisible\n    };\n\n    return (\n      this.renderTemplate('default', { teams: this.items }) ||\n      html`\n        <div class=\"container\" @blur=${this.lostFocus}>\n          <fluent-text-field\n            appearance=\"outline\"\n            id=\"teams-channel-picker-input\"\n            aria-label=\"Select a channel\"\n            placeholder=\"${!!this._selectedItemState ? '' : this.strings.inputPlaceholderText} \"\n            label=\"teams-channel-picker-input\"\n            @click=${this.gainedFocus}\n            @keyup=${(e: KeyboardEvent) => this.handleInputChanged(e)}>\n              <div slot=\"start\" style=\"width: max-content;\">${this.renderSelected()}</div>\n              <div slot=\"end\">${this.renderChevrons()}${this.renderCloseButton()}</div>\n          </fluent-text-field>\n          <fluent-card class=${classMap(dropdownClasses)}>\n            ${this.renderDropdown()}\n          </fluent-card>\n        </div>`\n    );\n  }\n\n  /**\n   * Renders selected channel\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderSelected() {\n    if (!this._selectedItemState) {\n      return this.renderSearchIcon();\n    }\n    let icon: TemplateResult;\n    if (this._selectedItemState.parent.channels) {\n      icon = html`<img\n        class=\"team-photo\"\n        alt=\"${this._selectedItemState.parent.item.displayName}\"\n        src=${this.teamsPhotos[this._selectedItemState.parent.item.id]?.photo} />`;\n    }\n\n    const parentName = this._selectedItemState?.parent?.item?.displayName.trim();\n    const channelName = this._selectedItemState?.item?.displayName.trim();\n\n    return html`\n      <fluent-breadcrumb title=${this._selectedItemState.item.displayName}>\n        <fluent-breadcrumb-item>\n          <span slot=\"start\">${icon}</span>\n          <span class=\"team-parent-name\">${parentName}</span>\n          <span slot=\"separator\" class=\"arrow\">${getSvg(SvgIcon.TeamSeparator, '#000000')}</span>\n        </fluent-breadcrumb-item>\n        <fluent-breadcrumb-item>${channelName}</fluent-breadcrumb-item>\n      </fluent-breadcrumb>`;\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected clearState(): void {\n    this._items = [];\n    this._inputValue = '';\n    this._treeViewState = [];\n    this._focusList = [];\n    this._isDropdownVisible = false;\n  }\n\n  /**\n   * Renders search icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderSearchIcon() {\n    return html`\n      <div class=\"search-icon\">\n        ${getSvg(SvgIcon.Search, '#252424')}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders close button\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderCloseButton() {\n    return html`\n      <div\n        class=\"close-icon\"\n        style=\"display:none\"\n        @click=\"${() => this.removeSelectedChannel(null)}\">\n        <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M0.0885911 0.215694L0.146447 0.146447C0.320013 -0.0271197 0.589437 -0.046405 0.784306 0.0885911L0.853553 0.146447L4 3.293L7.14645 0.146447C7.34171 -0.0488154 7.65829 -0.0488154 7.85355 0.146447C8.04882 0.341709 8.04882 0.658291 7.85355 0.853553L4.707 4L7.85355 7.14645C8.02712 7.32001 8.0464 7.58944 7.91141 7.78431L7.85355 7.85355C7.67999 8.02712 7.41056 8.0464 7.21569 7.91141L7.14645 7.85355L4 4.707L0.853553 7.85355C0.658291 8.04882 0.341709 8.04882 0.146447 7.85355C-0.0488154 7.65829 -0.0488154 7.34171 0.146447 7.14645L3.293 4L0.146447 0.853553C-0.0271197 0.679987 -0.046405 0.410563 0.0885911 0.215694L0.146447 0.146447L0.0885911 0.215694Z\" fill=\"#212121\"/>\n        </svg>\n      </div>\n    `;\n  }\n\n  /**\n   * Displays the close button after selecting a channel.\n   */\n  protected showCloseIcon() {\n    const downChevron = this.renderRoot.querySelector('.down-chevron') as HTMLElement;\n    const upChevron = this.renderRoot.querySelector('.up-chevron') as HTMLElement;\n    const closeIcon = this.renderRoot.querySelector('.close-icon') as HTMLElement;\n    if (downChevron) {\n      downChevron.style.display = 'none';\n    }\n    if (upChevron) {\n      upChevron.style.display = 'none';\n    }\n\n    if (closeIcon) {\n      closeIcon.style.display = null;\n    }\n  }\n\n  /**\n   * Renders down chevron icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDownChevron() {\n    return html`\n      <div class=\"down-chevron\" @click=${this.gainedFocus}>\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M2.21967 4.46967C2.51256 4.17678 2.98744 4.17678 3.28033 4.46967L6 7.18934L8.71967 4.46967C9.01256 4.17678 9.48744 4.17678 9.78033 4.46967C10.0732 4.76256 10.0732 5.23744 9.78033 5.53033L6.53033 8.78033C6.23744 9.07322 5.76256 9.07322 5.46967 8.78033L2.21967 5.53033C1.92678 5.23744 1.92678 4.76256 2.21967 4.46967Z\" fill=\"#212121\" />\n        </svg>\n      </div>`;\n  }\n\n  /**\n   * Renders up chevron icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderUpChevron() {\n    return html`\n      <div style=\"display:none\" class=\"up-chevron\" @click=${(e: Event) => this.handleUpChevronClick(e)}>\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M2.21967 7.53033C2.51256 7.82322 2.98744 7.82322 3.28033 7.53033L6 4.81066L8.71967 7.53033C9.01256 7.82322 9.48744 7.82322 9.78033 7.53033C10.0732 7.23744 10.0732 6.76256 9.78033 6.46967L6.53033 3.21967C6.23744 2.92678 5.76256 2.92678 5.46967 3.21967L2.21967 6.46967C1.92678 6.76256 1.92678 7.23744 2.21967 7.53033Z\" fill=\"#212121\" />\n        </svg>\n      </div>`;\n  }\n\n  /**\n   * Renders both chevrons\n   */\n  private renderChevrons() {\n    return html`${this.renderUpChevron()}${this.renderDownChevron()}`;\n  }\n\n  /**\n   * Renders dropdown content\n   *\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDropdown() {\n    if (this.isLoadingState || !this._treeViewState) {\n      return this.renderLoading();\n    }\n\n    if (this._treeViewState) {\n      if (!this.isLoadingState && this._treeViewState.length === 0 && this._inputValue.length > 0) {\n        return this.renderError();\n      }\n\n      return this.renderDropdownList(this._treeViewState);\n    }\n\n    return html``;\n  }\n\n  /**\n   * Renders the dropdown list recursively\n   *\n   * @protected\n   * @param {ChannelPickerItemState[]} items\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDropdownList(items: ChannelPickerItemState[]) {\n    if (items && items.length > 0) {\n      let icon: TemplateResult = null;\n\n      return html`\n        <fluent-tree-view\n          class=\"tree-view\"\n          dir=${this.direction}>\n          ${repeat(\n            items,\n            (itemObj: ChannelPickerItemState) => itemObj?.item,\n            (obj: ChannelPickerItemState) => {\n              if (obj.channels) {\n                icon = html`<img\n                  class=\"team-photo\"\n                  alt=\"${obj.item.displayName}\"\n                  src=${this.teamsPhotos[obj.item.id].photo} />`;\n              }\n              return html`\n                <fluent-tree-item\n                  ?expanded=${obj?.isExpanded}\n                  @click=${(e: Event) => this.handleTeamTreeItemClick(e)}>\n                    ${icon}${obj.item.displayName}\n                    ${repeat(\n                      obj?.channels,\n                      (channels: ChannelPickerItemState) => channels.item,\n                      (channel: ChannelPickerItemState) => {\n                        return this.renderItem(channel);\n                      }\n                    )}\n                </fluent-tree-item>`;\n            }\n          )}\n        </fluent-tree-view>`;\n    }\n    return null;\n  }\n\n  /**\n   * Renders each Channel or Team\n   *\n   * @param {ChannelPickerItemState} itemState\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderItem(itemState: ChannelPickerItemState) {\n    return html`\n      <fluent-tree-item\n        id=${itemState?.item?.id}\n        @keydown=${(e: KeyboardEvent) => this.onUserKeyDown(e, itemState)}\n        @click=${() => this.handleItemClick(itemState)}>\n          ${itemState?.item.displayName}\n      </fluent-tree-item>`;\n  }\n\n  /**\n   * Renders an error message when no channel or teams match the query\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderError(): TemplateResult {\n    const template = this.renderTemplate('error', null, 'error');\n\n    return (\n      template ||\n      html`\n        <div class=\"message-parent\">\n          <div\n            label=\"search-error-text\"\n            aria-label=\"We didn't find any matches.\"\n            class=\"search-error-text\">\n            ${this.strings.noResultsFound}\n          </div>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Renders loading spinner while channels are fetched from the Graph\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderLoading(): TemplateResult {\n    const template = this.renderTemplate('loading', null, 'loading');\n\n    return (\n      template ||\n      mgtHtml`\n        <div class=\"message-parent\">\n          <mgt-spinner></mgt-spinner>\n          <div label=\"loading-text\" aria-label=\"loading\" class=\"loading-text\">\n            ${this.strings.loadingMessage}\n          </div>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Queries Microsoft Graph for Teams & respective channels then sets to items list\n   *\n   * @protected\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    let teams: MicrosoftGraph.Team[];\n    if (provider && provider.state === ProviderState.SignedIn) {\n      const graph = provider.graph.forComponent(this);\n\n      // make sure we have the needed scopes\n      if (!(await provider.getAccessTokenForScopes(...MgtTeamsChannelPicker.requiredScopes))) {\n        return;\n      }\n\n      teams = await getAllMyTeams(graph);\n      teams = teams.filter(t => !t.isArchived);\n\n      let teamsIds = teams.map(t => t.id);\n\n      const beta = BetaGraph.fromGraph(graph);\n\n      this.teamsPhotos = await getTeamsPhotosforPhotoIds(beta, teamsIds);\n\n      const batch = graph.createBatch();\n      const scopes = ['team.readbasic.all'];\n\n      for (const team of teams) {\n        batch.get(team.id, `teams/${team.id}/channels`, scopes);\n      }\n\n      const responses = await batch.executeAll();\n\n      for (const team of teams) {\n        const response = responses.get(team.id);\n\n        if (response && response.content && response.content.value) {\n          team.channels = response.content.value.map((c: MicrosoftGraph.Team) => {\n            return {\n              item: c\n            };\n          });\n        }\n      }\n\n      this.items = teams.map(t => {\n        return {\n          channels: t.channels as DropdownItem[],\n          item: t\n        };\n      });\n    }\n    this.filterList();\n    this.resetFocusState();\n  }\n\n  /**\n   * Handles operations that are performed on the DOM when you remove a\n   * channel. For example on clicking the X button.\n   * @param item a selected channel item\n   */\n  private removeSelectedChannel(item: ChannelPickerItemState) {\n    this.selectChannel(item);\n    const treeItems = this.renderRoot.querySelectorAll('fluent-tree-item') as NodeListOf<HTMLElement>;\n    if (treeItems) {\n      treeItems.forEach((treeItem: HTMLElement) => {\n        treeItem.removeAttribute('expanded');\n        treeItem.removeAttribute('selected');\n      });\n    }\n  }\n\n  private handleItemClick(item: ChannelPickerItemState) {\n    if (item.channels) {\n      item.isExpanded = !item.isExpanded;\n    } else {\n      this.selectChannel(item);\n      this.lostFocus();\n    }\n  }\n\n  private handleTeamTreeItemClick(event: Event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    const element = event.target as HTMLElement;\n    if (element) {\n      const expanded = element.getAttribute('expanded');\n\n      if (!!expanded) {\n        element.removeAttribute('expanded');\n      } else {\n        element.setAttribute('expanded', 'true');\n      }\n      element.removeAttribute('selected');\n      const hasId = element.getAttribute('id');\n      if (hasId) {\n        element.setAttribute('selected', 'true');\n      }\n    }\n  }\n\n  private handleInputChanged(e: KeyboardEvent) {\n    const target = e.target as HTMLInputElement;\n    if (this._inputValue !== target?.value) {\n      this._inputValue = target?.value;\n    } else {\n      return;\n    }\n\n    // shows list\n    this.gainedFocus();\n\n    if (!this.debouncedSearch) {\n      this.debouncedSearch = debounce(() => {\n        this.filterList();\n      }, 400);\n    }\n\n    this.debouncedSearch();\n  }\n\n  private onUserKeyDown(e: KeyboardEvent, item?: ChannelPickerItemState) {\n    const key = e.code;\n    switch (key) {\n      case 'Enter':\n        this.selectChannel(item);\n        this.resetFocusState();\n        this.lostFocus();\n        e.preventDefault();\n        break;\n      case 'Backspace':\n        if (this._inputValue.length === 0 && this._selectedItemState) {\n          this.selectChannel(null);\n          this.resetFocusState();\n          e.preventDefault();\n        }\n        break;\n    }\n  }\n\n  private filterList() {\n    if (this.items) {\n      this._treeViewState = this.generateTreeViewState(this.items, this._inputValue);\n      this.resetFocusState();\n    }\n  }\n\n  private generateTreeViewState(\n    tree: DropdownItem[],\n    filterString: string = '',\n    parent: ChannelPickerItemState = null\n  ): ChannelPickerItemState[] {\n    const treeView: ChannelPickerItemState[] = [];\n    filterString = filterString.toLowerCase();\n\n    if (tree) {\n      for (const state of tree) {\n        let stateItem: ChannelPickerItemState;\n\n        if (filterString.length === 0 || state.item.displayName.toLowerCase().includes(filterString)) {\n          stateItem = { item: state.item, parent };\n          if (state.channels) {\n            stateItem.channels = this.generateTreeViewState(state.channels, '', stateItem);\n            stateItem.isExpanded = filterString.length > 0;\n          }\n        } else if (state.channels) {\n          const newStateItem = { item: state.item, parent };\n          const channels = this.generateTreeViewState(state.channels, filterString, newStateItem);\n          if (channels.length > 0) {\n            stateItem = newStateItem;\n            stateItem.channels = channels;\n            stateItem.isExpanded = true;\n          }\n        }\n\n        if (stateItem) {\n          treeView.push(stateItem);\n        }\n      }\n    }\n    return treeView;\n  }\n\n  // generates a flat list from a tree to facilitate easier focus\n  // navigation\n  private generateFocusList(items): any[] {\n    if (!items || items.length === 0) {\n      return [];\n    }\n\n    let array = [];\n\n    for (const item of items) {\n      array.push(item);\n      if (item.channels && item.isExpanded) {\n        array = [...array, ...this.generateFocusList(item.channels)];\n      }\n    }\n\n    return array;\n  }\n\n  private resetFocusState() {\n    this._focusList = this.generateFocusList(this._treeViewState);\n    this.requestUpdate();\n  }\n\n  private loadTeamsIfNotLoaded() {\n    if (!this.items && !this.isLoadingState) {\n      this.requestStateUpdate();\n    }\n  }\n\n  private handleWindowClick(e: MouseEvent) {\n    if (e.target !== this) {\n      this.lostFocus();\n    }\n  }\n\n  private gainedFocus() {\n    this._isFocused = true;\n    const input = this._input;\n    if (input) {\n      input.focus();\n    }\n\n    this._isDropdownVisible = true;\n    this.toggleChevron();\n    this.resetFocusState();\n  }\n\n  private lostFocus() {\n    const input = this._input;\n    if (input) {\n      input.value = this._inputValue = '';\n      input.textContent = '';\n    }\n\n    this._isFocused = false;\n    this._isDropdownVisible = false;\n    this.filterList();\n    this.toggleChevron();\n    this.requestUpdate();\n\n    if (this._selectedItemState !== undefined) {\n      this.showCloseIcon();\n    }\n  }\n\n  private selectChannel(item: ChannelPickerItemState) {\n    if (item && this._selectedItemState !== item) {\n      this._input.setAttribute('disabled', 'true');\n    } else {\n      this._input.removeAttribute('disabled');\n    }\n    this._selectedItemState = item;\n    this.lostFocus();\n    this.fireCustomEvent('selectionChanged', this.selectedItem);\n  }\n\n  /**\n   * Hides the close icon.\n   */\n  private hideCloseIcon() {\n    const closeIcon = this.renderRoot.querySelector('.close-icon') as HTMLElement;\n    if (closeIcon) {\n      closeIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * Toggles the up and down chevron depending on the dropdown\n   * visibility.\n   */\n  private toggleChevron() {\n    const downChevron = this.renderRoot.querySelector('.down-chevron') as HTMLElement;\n    const upChevron = this.renderRoot.querySelector('.up-chevron') as HTMLElement;\n    if (this._isDropdownVisible) {\n      if (downChevron) {\n        downChevron.style.display = 'none';\n      }\n      if (upChevron) {\n        upChevron.style.display = null;\n      }\n    } else {\n      if (downChevron) {\n        downChevron.style.display = null;\n        this.hideCloseIcon();\n      }\n      if (upChevron) {\n        upChevron.style.display = 'none';\n      }\n    }\n    this.hideCloseIcon();\n  }\n\n  private handleUpChevronClick(e: Event) {\n    e.stopPropagation();\n    this.lostFocus();\n  }\n}\n"]}
{"version":3,"file":"mgt-login.js","sourceRoot":"src/","sources":["components/mgt-login/mgt-login.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  Providers,\n  ProviderState,\n  MgtTemplatedComponent,\n  IProviderAccount,\n  mgtHtml,\n  customElement\n} from '@microsoft/mgt-element';\n\nimport { AvatarSize, IDynamicPerson, ViewType } from '../../graph/types';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { MgtPerson } from '../mgt-person/mgt-person';\nimport { PersonViewType } from '../mgt-person/mgt-person-types';\n\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\n\nimport { styles } from './mgt-login-css';\nimport { strings } from './strings';\n\nimport '../../styles/style-helper';\n\nimport { fluentListbox, fluentProgressRing, fluentButton, fluentCard } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nregisterFluentComponents(fluentListbox, fluentProgressRing, fluentButton, fluentCard);\n\n/**\n *  loginViewType describes the enum strings that can be passed in to determine\n *  size of the mgt-login control.\n */\nexport type LoginViewType = 'avatar' | 'compact' | 'full';\n\n// tslint:disable-next-line: completed-docs\ntype PersonViewConfig = {\n  // tslint:disable-next-line: completed-docs\n  view: ViewType;\n  // tslint:disable-next-line: completed-docs\n  avatarSize: AvatarSize;\n};\n\n/**\n * Web component button and flyout control to facilitate Microsoft identity platform authentication\n *\n * @export\n * @class MgtLogin\n * @extends {MgtBaseComponent}\n *\n * @fires {CustomEvent<undefined>} loginInitiated - Fired when login is initiated by the user\n * @fires {CustomEvent<undefined>} loginCompleted - Fired when login completes\n * @fires {CustomEvent<undefined>} loginFailed - Fired when login fails\n * @fires {CustomEvent<undefined>} logoutInitiated - Fired when logout is initiated by the user\n * @fires {CustomEvent<undefined>} logoutCompleted - Fired when logout completed\n *\n * @template signed-in-button-content (dataContext: {personDetails, personImage})\n * @template signed-out-button-content (dataContext: null)\n * @template flyout-commands (dataContext: {handleSignOut})\n * @template flyout-person-details (dataContext: {personDetails, personImage})\n *\n * @cssprop --font-size - {Length} Login font size\n * @cssprop --font-weight - {Length} Login font weight\n * @cssprop --margin - {String} Margin size\n * @cssprop --button-color - {Color} Login button font color\n * @cssprop --button-color--hover - {Color} Login button font hover color\n * @cssprop --button-background-color--hover - {Color} Login background hover color\n * @cssprop --popup-background-color - {Color} Popup background color\n * @cssprop --popup-color - {Color} Popup font color\n * @cssprop --popup-command-font-size - {Length} Popup command font size\n * @cssprop --popup-command-margin - {String} margins for the logout command in the popup\n * @cssprop --popup-padding - {String} padding applied inside the popup\n * @cssprop --profile-spacing - {String} margin applied to the active account inside the popup\n * @cssprop --profile-spacing-full - {String} margin applied to the active account inside the popup when login-view is full or more that one account is signed in.\n * @cssprop --add-account-button-color - {Color} Color for the text and icon of the add account button\n */\n@customElement('login')\nexport class MgtLogin extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  /**\n   * Returns the object of strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to use specific user details for login\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'user-details',\n    type: Object\n  })\n  public userDetails: IDynamicPerson;\n\n  /**\n   * determines if presence is shown for logged in user\n   * defaults to false\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence = false;\n\n  /**\n   * determines the view style to apply to the logged in user\n   * options are 'full', 'compact', 'avatar', defaults to 'full'\n   * @type {LoginViewType}\n   */\n  @property({\n    attribute: 'login-view',\n    type: String\n  })\n  public loginView: LoginViewType = 'full';\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Get the scopes required for login\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtLogin\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['user.read', ...MgtPerson.requiredScopes])];\n  }\n\n  /**\n   * determines if login menu popup should be showing\n   * @type {boolean}\n   */\n  @property({ attribute: false }) private _isFlyoutOpen: boolean;\n\n  private _image: string;\n\n  /**\n   * Suffix for user details key\n   *\n   * @private\n   * @type {string}\n   * @memberof MgtLogin\n   */\n  private _userDetailsKey: string = '-userDetails';\n\n  constructor() {\n    super();\n    this._isFlyoutOpen = false;\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtLogin\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', e => e.stopPropagation());\n  }\n\n  /**\n   * Initiate login\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async login(): Promise<void> {\n    const provider = Providers.globalProvider;\n    if (!provider.isMultiAccountSupportedAndEnabled && (this.userDetails || !this.fireCustomEvent('loginInitiated'))) {\n      return;\n    }\n    if (provider && provider.login) {\n      await provider.login();\n\n      if (provider.state === ProviderState.SignedIn) {\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.fireCustomEvent('loginFailed');\n      }\n    }\n  }\n\n  /**\n   * Initiate logout\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async logout(): Promise<void> {\n    if (!this.fireCustomEvent('logoutInitiated')) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (provider && provider.isMultiAccountSupportedAndEnabled) {\n      localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n    }\n    if (provider && provider.logout) {\n      await provider.logout();\n      this.userDetails = null;\n      if (provider.isMultiAccountSupportedAndEnabled) {\n        localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n      }\n      this.hideFlyout();\n      this.fireCustomEvent('logoutCompleted');\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    const classes = {\n      root: true,\n      'vertical-layout': this.usesVerticalPersonCard\n    };\n    return html`\n       <div class=${classMap(classes)} dir=${this.direction}>\n         <div>\n           ${this.renderButton()}\n         </div>\n         ${this.renderFlyout()}\n       </div>\n     `;\n  }\n\n  /**\n   * Load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (provider && !this.userDetails) {\n      if (provider.state === ProviderState.SignedIn) {\n        this.userDetails = await getUserWithPhoto(provider.graph.forComponent(this));\n\n        if (this.userDetails.personImage) {\n          this._image = this.userDetails.personImage;\n        }\n\n        if (provider.isMultiAccountSupportedAndEnabled) {\n          localStorage.setItem(\n            Providers.globalProvider.getActiveAccount().id + this._userDetailsKey,\n            JSON.stringify(this.userDetails)\n          );\n        }\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.userDetails = null;\n      }\n    }\n  }\n\n  private buildAriaLabel(isSignedIn: boolean, defaultLabel: string) {\n    if (!isSignedIn) return defaultLabel;\n\n    return (defaultLabel = this.userDetails ? this.userDetails.displayName : this.strings.signInLinkSubtitle);\n  }\n\n  /**\n   * Render the button.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected renderButton() {\n    const isSignedIn = Providers.globalProvider?.state === ProviderState.SignedIn;\n    const ariaLabel = this.buildAriaLabel(isSignedIn, this.strings.signInLinkSubtitle);\n\n    const classes = {\n      'login-button': true,\n      'signed-in': isSignedIn,\n      small: this.loginView === 'avatar',\n      'full-size': this.loginView === 'full',\n      'no-click': this._isFlyoutOpen\n    };\n    // uses a regular button for the signed in state to ease styling\n    return isSignedIn && this.userDetails\n      ? html`\n        <button\n          aria-label=${ariaLabel}\n          @click=${this.onClick}\n          class=${classMap(classes)}\n        >\n          ${this.renderSignedInButtonContent(this.userDetails, this._image)}\n        </button>\n      `\n      : html`\n        <fluent-button\n          appearance=\"neutral\"\n          aria-label=${ariaLabel}\n          ?disabled=${this.isLoadingState}\n          @click=${this.onClick}\n          class=${classMap(classes)}\n        >\n          ${this.renderSignedOutButtonContent()}\n        </fluent-button>\n      `;\n  }\n\n  private flyoutOpened = () => {\n    this._isFlyoutOpen = true;\n  };\n  private flyoutClosed = () => {\n    this._isFlyoutOpen = false;\n  };\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected renderFlyout() {\n    return mgtHtml`\n      <mgt-flyout\n        class=\"flyout\"\n        light-dismiss\n        @opened=${this.flyoutOpened}\n        @closed=${this.flyoutClosed}\n      >\n        <div slot=\"flyout\">\n          <!-- Setting the card fill ensures the correct colors on hover states -->\n          <fluent-card card-fill-color=\"#fbfbfb\">\n            ${this.renderFlyoutContent()}\n          </fluent-card>\n        </div>\n      </mgt-flyout>\n      `;\n  }\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutContent() {\n    if (!this.userDetails) {\n      return;\n    }\n    return html`\n       <div class=\"popup\">\n         <div class=\"popup-content\">\n           <div class=\"popup-commands\">\n             ${this.renderFlyoutCommands()}\n           </div>\n           <div class=\"inside-content\">\n             <div class=\"main-profile\">\n               ${this.renderFlyoutPersonDetails(this.userDetails, this._image)}\n             </div>\n             ${this.renderAccounts()}\n           </div>\n           ${this.renderAddAccountContent()}\n         </div>\n       </div>\n     `;\n  }\n\n  private get hasMultipleAccounts(): boolean {\n    return (\n      Providers.globalProvider?.isMultiAccountSupportedAndEnabled &&\n      Providers.globalProvider?.getAllAccounts?.()?.length > 1\n    );\n  }\n\n  private get usesVerticalPersonCard(): boolean {\n    return this.loginView === 'full' || this.hasMultipleAccounts;\n  }\n\n  /**\n   * Render the flyout person details.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutPersonDetails(personDetails: IDynamicPerson, personImage: string) {\n    const template = this.renderTemplate('flyout-person-details', { personDetails, personImage });\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${personDetails}\n          .personImage=${personImage}\n          .view=${ViewType.twolines}\n          .line2Property=${'email'}\n          ?vertical-layout=${this.usesVerticalPersonCard}\n          class=\"person\"\n        />\n        `\n    );\n  }\n\n  /**\n   * Render the flyout commands.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutCommands() {\n    const template = this.renderTemplate('flyout-commands', { handleSignOut: () => this.logout() });\n    return (\n      template ||\n      html`\n        <ul>\n          <li>\n            <fluent-button\n              appearance=\"lightweight\"\n              class=\"popup-command\"\n              @click=${this.logout}\n              aria-label=${this.strings.signOutLinkSubtitle}\n            >\n              ${this.strings.signOutLinkSubtitle}\n            </fluent-button>\n          </li>\n        </ul>\n      `\n    );\n  }\n\n  /**\n   * Render the button content.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderButtonContent() {\n    if (this.userDetails) {\n      return this.renderSignedInButtonContent(this.userDetails, this._image);\n    } else {\n      return this.renderSignedOutButtonContent();\n    }\n  }\n\n  /**\n   * Renders multi account content to add additional users\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderAddAccountContent() {\n    if (Providers.globalProvider.isMultiAccountSupportedAndEnabled) {\n      return html`\n          <div class=\"add-account\">\n             <fluent-button\n               appearance=\"lightweight\"\n               class=\"add-account-button\"\n               aria-label=\"Sign in with different account\"\n               @click=${() => {\n                 this.login();\n               }}\n             >\n               <i class=\"account-switch-icon\">${getSvg(SvgIcon.SelectAccount, '#000000')}</i>\n               Sign in with a different account\n             </fluent-button>\n           </div>\n       `;\n    }\n  }\n\n  private parsePersonDisplayConfiguration(): PersonViewConfig {\n    const displayConfig: PersonViewConfig = { view: ViewType.twolines, avatarSize: 'small' };\n    switch (this.loginView) {\n      case 'avatar':\n        displayConfig.view = ViewType.image;\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'compact':\n        displayConfig.view = ViewType.oneline;\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'full':\n      default:\n        displayConfig.view = ViewType.twolines;\n        displayConfig.avatarSize = 'large';\n        break;\n    }\n    return displayConfig;\n  }\n\n  /**\n   * Render the button content when the user is signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedInButtonContent(personDetails: IDynamicPerson, personImage: string) {\n    const template = this.renderTemplate('signed-in-button-content', { personDetails, personImage });\n    const displayConfig = this.parsePersonDisplayConfiguration();\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${this.userDetails}\n          .personImage=${this._image}\n          .view=${displayConfig.view}\n          .showPresence=${this.showPresence}\n          .avatarSize=${displayConfig.avatarSize}\n          line2-property=\"email\"\n          class=\"person\"\n        />\n       `\n    );\n  }\n\n  /**\n   * POC for multi accounts - temporary\n   *\n   * @return {*}\n   * @memberof MgtLogin\n   */\n  renderAccounts() {\n    if (\n      Providers.globalProvider.state === ProviderState.SignedIn &&\n      Providers.globalProvider.isMultiAccountSupportedAndEnabled\n    ) {\n      const provider = Providers.globalProvider;\n      const list = provider.getAllAccounts();\n\n      if (list && list.length > 1) {\n        return html`\n         <div id=\"accounts\">\n           <fluent-design-system-provider>\n             <fluent-listbox class=\"list-box\" name=\"Account list\">\n              ${list.map(account => {\n                if (account.id !== provider.getActiveAccount().id) {\n                  const details = localStorage.getItem(account.id + this._userDetailsKey);\n                  return mgtHtml`\n                    <fluent-option class=\"list-box-option\" value=\"${account.name}\" role=\"option\">\n                      <mgt-person\n                        @click=${() => this.setActiveAccount(account)}\n                        @keyup=${(e: KeyboardEvent) => {\n                          if (e.key === 'Enter') {\n                            this.setActiveAccount(account);\n                          }\n                        }}\n                        .personDetails=${details ? JSON.parse(details) : null}\n                        .fallbackDetails=${{ displayName: account.name, mail: account.mail }}\n                        .view=${PersonViewType.twolines}\n                        class=\"person\"\n                      />\n                    </fluent-option>\n                  `;\n                }\n              })}\n             </fluent-listbox>\n           </fluent-design-system-provider>\n         </div>\n       `;\n      }\n    }\n  }\n\n  /**\n   * Set one of the non-active accounts as the active account\n   *\n   * @param {*} account\n   * @memberof MgtLogin\n   */\n  private setActiveAccount(account: IProviderAccount) {\n    Providers.globalProvider.setActiveAccount(account);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected clearState() {\n    this.userDetails = null;\n    this._image = null;\n  }\n\n  /**\n   * Render the button content when the user is not signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedOutButtonContent() {\n    const template = this.renderTemplate('signed-out-button-content', null);\n    return (\n      template ||\n      html`\n        <span>${this.strings.signInLinkSubtitle}</span>\n      `\n    );\n  }\n\n  /**\n   * Show the flyout and its content.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n\n  /**\n   * Dismiss the flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n  }\n\n  private onClick() {\n    if (this.userDetails && this._isFlyoutOpen) {\n      this.hideFlyout();\n    } else if (this.userDetails) {\n      this.showFlyout();\n    } else {\n      this.login();\n    }\n  }\n}\n"]}
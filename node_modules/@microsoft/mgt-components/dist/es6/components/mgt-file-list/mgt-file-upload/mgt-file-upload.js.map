{"version":3,"file":"mgt-file-upload.js","sourceRoot":"src/","sources":["components/mgt-file-list/mgt-file-upload/mgt-file-upload.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styles } from './mgt-file-upload-css';\nimport { strings } from './strings';\nimport { getSvg, SvgIcon } from '../../../utils/SvgHelper';\nimport { formatBytes } from '../../../utils/Utils';\nimport { IGraph, MgtBaseComponent, mgtHtml, customElement } from '@microsoft/mgt-element';\nimport { ViewType } from '../../../graph/types';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport {\n  clearFilesCache,\n  getGraphfile,\n  getUploadSession,\n  sendFileContent,\n  sendFileChunck,\n  deleteSessionFile\n} from '../../../graph/graph.files';\n\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { fluentButton, fluentCheckbox, fluentProgress, fluentCard } from '@fluentui/web-components';\n\nregisterFluentComponents(fluentProgress, fluentButton, fluentCheckbox, fluentCard);\n\n/**\n * Upload conflict behavior status\n */\nexport const enum MgtFileUploadConflictBehavior {\n  rename,\n  replace\n}\n\n/**\n * MgtFileUpload upload item lifecycle object.\n *\n * @export\n * @interface MgtFileUploadItem\n */\nexport interface MgtFileUploadItem {\n  /**\n   * Session url to keep upload progress open untill all chuncks are sent\n   */\n  uploadUrl?: string;\n\n  /**\n   *  Upload file progress value\n   */\n  percent?: number;\n\n  /**\n   *  Validate if File has any conflict Behavior\n   */\n  conflictBehavior?: MgtFileUploadConflictBehavior;\n\n  /**\n   *  Output \"Success\" or \"Fail\" icon base on upload response\n   */\n  iconStatus?: TemplateResult;\n\n  /**\n   * File object to be upload.\n   */\n  file?: File;\n\n  /**\n   *  Full file Path to be upload.\n   */\n  fullPath?: string;\n\n  /**\n   * Mgt-File View state change on upload response\n   */\n  view?: ViewType;\n\n  /**\n   * Manipulate fileDetails on upload lifecycle\n   */\n  driveItem?: DriveItem;\n\n  /**\n   * Mgt-File line2Property output field message\n   */\n  fieldUploadResponse?: string;\n\n  /**\n   * Validates state of upload progress\n   */\n  completed?: boolean;\n\n  /**\n   * Load large Files into ArrayBuffer to send by chuncks\n   */\n  mimeStreamString?: ArrayBuffer;\n\n  /**\n   *  Max chunck size to upload file by slice\n   */\n  maxSize?: number;\n\n  /**\n   *  Minimal chunck size to upload file by slice\n   */\n  minSize?: number;\n}\n\n/**\n * MgtFileUpload configuration object with MgtFileList Properties.\n *\n * @export\n * @interface MgtFileUploadConfig\n */\nexport interface MgtFileUploadConfig {\n  /**\n   * MS Graph APIs connector\n   * @type {IGraph}\n   */\n  graph: IGraph;\n\n  /**\n   *  allows developer to provide site id for a file\n   *  @type {string}\n   */\n  siteId?: string;\n\n  /**\n   * DriveId to upload Files\n   *  @type {string}\n   */\n  driveId?: string;\n\n  /**\n   * GroupId to upload Files\n   *  @type {string}\n   */\n  groupId?: string;\n\n  /**\n   * allows developer to provide item id for a file\n   *  @type {string}\n   */\n  itemId?: string;\n\n  /**\n   *  allows developer to provide item path for a file\n   *  @type {string}\n   */\n  itemPath?: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *  @type {string}\n   */\n  userId?: string;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *  @type {Number}\n   */\n  maxFileSize?: number;\n\n  /**\n   *  A number value to indicate the number of files to upload.\n   *  @type {Number}\n   */\n  maxUploadFile?: Number;\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   *  @type {string[]}\n   */\n  excludedFileExtensions?: string[];\n}\n\n// tslint:disable-next-line: completed-docs\ninterface FileWithPath extends File {\n  // tslint:disable-next-line: completed-docs\n  fullPath: string;\n}\n\n/**\n * A component to upload files to OneDrive or SharePoint Sites\n *\n * @export\n * @class MgtFileUpload\n * @extends {MgtBaseComponent}\n *\n * @cssprop --file-upload-border- {String} File upload border top style\n * @cssprop --file-upload-background-color - {Color} File upload background color with opacity style\n * @cssprop --file-upload-button-float - {string} Upload button float position\n * @cssprop --file-upload-button-background-color - {Color} Background color of upload button\n * @cssprop --file-upload-dialog-background-color - {Color} Background color of dialog\n * @cssprop --file-upload-dialog-content-background-color - {Color} Background color of dialog content\n * @cssprop --file-upload-dialog-content-color - {Color} Color of dialog content\n * @cssprop --file-upload-button-color - {Color} Text color of upload button\n * @cssprop --file-upload-dialog-primarybutton-background-color - {Color} Background color of primary button\n * @cssprop --file-upload-dialog-primarybutton-color - {Color} Color text of primary button\n * @cssprop --file-item-margin - {String} File item margin\n * @cssprop --file-item-background-color--hover - {Color} File item background hover color\n * @cssprop --file-item-border-top - {String} File item border top style\n * @cssprop --file-item-border-left - {String} File item border left style\n * @cssprop --file-item-border-right - {String} File item border right style\n * @cssprop --file-item-border-bottom - {String} File item border bottom style\n * @cssprop --file-item-background-color--active - {Color} File item background active color\n */\n@customElement('file-upload')\n// @customElement('mgt-file-upload')\nexport class MgtFileUpload extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Allows developer to provide an array of MgtFileUploadItem to upload\n   *\n   * @type {MgtFileUploadItem[]}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public filesToUpload: MgtFileUploadItem[];\n\n  /**\n   * List of mgt-file-list properties used to upload files.\n   *\n   * @type {MgtFileUploadConfig}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public fileUploadList: MgtFileUploadConfig;\n\n  /**\n   * Get the scopes required for file upload\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileUpload\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.readwrite', 'files.readwrite.all', 'sites.readwrite.all'])];\n  }\n\n  // variable manage drag style when mouse over\n  private _dragCounter: number = 0;\n  // variable avoids removal of files after drag and drop, https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\n  private _dropEffect: string = 'copy';\n  // variable defined max chuck size \"4MB\" for large files .\n  private _maxChunckSize: number = 4 * 1024 * 1024;\n  private _dialogTitle: string = '';\n  private _dialogContent: string = '';\n  private _dialogPrimaryButton: string = '';\n  private _dialogSecondaryButton: string = '';\n  private _dialogCheckBox: string = '';\n  private _applyAll: boolean = false;\n  private _applyAllConflitBehavior: number = null;\n  private _maximumFileSize: boolean = false;\n  private _excludedFileType: boolean = false;\n\n  constructor() {\n    super();\n    this.filesToUpload = [];\n  }\n\n  /**\n   *\n   * @returns\n   */\n  public render(): TemplateResult {\n    if (this.parentElement !== null) {\n      const root = this.parentElement;\n      root.addEventListener('dragenter', this.handleonDragEnter);\n      root.addEventListener('dragleave', this.handleonDragLeave);\n      root.addEventListener('dragover', this.handleonDragOver);\n      root.addEventListener('drop', this.handleonDrop);\n    }\n\n    return html`\n        <div id=\"file-upload-dialog\" class=\"file-upload-dialog\">\n          <!-- Modal content -->\n          <fluent-card class=\"file-upload-dialog-content\">\n            <span class=\"file-upload-dialog-close\" id=\"file-upload-dialog-close\" >${getSvg(SvgIcon.Cancel)}</span>\n            <div class=\"file-upload-dialog-content-text\">\n              <h2 class=\"file-upload-dialog-title\">${this._dialogTitle}</h2>\n              <div>${this._dialogContent}</div>\n              <div class=\"file-upload-dialog-check-wrapper\">\n                <fluent-checkbox id=\"file-upload-dialog-check\" class=\"file-upload-dialog-check\" >\n                  <span>${this._dialogCheckBox}</span>\n                </fluent-checkbox>\n              </div>\n            </div>\n            <div class=\"file-upload-dialog-editor\">\n              <fluent-button class=\"file-upload-dialog-ok\">\n              ${this._dialogPrimaryButton}\n              </fluent-button>\n              <fluent-button class=\"file-upload-dialog-cancel\">\n              ${this._dialogSecondaryButton}\n              </fluent-button>\n            </div>\n          </fluent-card>\n        </div>\n        <div id=\"file-upload-border\" >\n        </div>\n        <div class=\"file-upload-area-button\">\n        <div>\n          <input\n            id=\"file-upload-input\"\n            title=\"${this.strings.uploadButtonLabel}\"\n            tabindex=\"-1\"\n            aria-label=\"file upload input\"\n            type=\"file\"\n            multiple=\"true\"\n            @change=\"${this.onFileUploadChange}\"\n          />\n          <fluent-button class=\"file-upload-button\" @click=${this.onFileUploadClick} label=${\n      this.strings.uploadButtonLabel\n    }>\n            ${getSvg(SvgIcon.Upload)} <span class=\"upload-text\">${this.strings.buttonUploadFile}</span>\n          </fluent-button>\n        </div>\n        </div>\n        <div class=\"file-upload-Template\">\n        ${this.renderFolderTemplate(this.filesToUpload)}\n        </div>\n       `;\n  }\n\n  /**\n   * Render Folder structure of files to upload\n   * @param fileItems\n   * @returns\n   */\n  protected renderFolderTemplate(fileItems: MgtFileUploadItem[]) {\n    const folderStructure: string[] = [];\n    if (fileItems.length > 0) {\n      const TemplateFileItems = fileItems.map(fileItem => {\n        if (folderStructure.indexOf(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/'))) === -1) {\n          if (fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/')) !== '') {\n            folderStructure.push(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/')));\n            return mgtHtml`\n            <div class='file-upload-table'>\n              <div class='file-upload-cell'>\n                <mgt-file\n                  .fileDetails=${{\n                    name: fileItem.fullPath.substring(1, fileItem.fullPath.lastIndexOf('/')),\n                    folder: 'Folder'\n                  }}\n                  .view=${ViewType.oneline}\n                  class=\"mgt-file-item\"\n                >\n                </mgt-file>\n              </div>\n            </div>\n            ${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n          } else {\n            return html`${this.renderFileTemplate(fileItem, '')}`;\n          }\n        } else {\n          return html`${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n        }\n      });\n      return html`${TemplateFileItems}`;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Render file upload area\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileTemplate(fileItem: MgtFileUploadItem, folderTabStyle: string) {\n    return mgtHtml`\n        <div class=\"${fileItem.completed ? 'file-upload-table' : 'file-upload-table upload'}\">\n          <div class=\"${\n            folderTabStyle +\n            (fileItem.fieldUploadResponse === 'lastModifiedDateTime' ? ' file-upload-dialog-success' : '')\n          }\">\n            <div class='file-upload-cell'>\n              <div style=${fileItem.fieldUploadResponse === 'description' ? 'opacity: 0.5;' : ''}>\n                <div class=\"file-upload-status\">\n                  ${fileItem.iconStatus}\n                </div>\n                <mgt-file\n                  .fileDetails=${fileItem.driveItem}\n                  .view=${fileItem.view}\n                  .line2Property=${fileItem.fieldUploadResponse}\n                  class=\"mgt-file-item\"\n                  >\n                </mgt-file>\n              </div>\n            </div>\n              ${fileItem.completed === false ? this.renderFileUploadTemplate(fileItem) : null}\n            </div>\n          </div>\n        </div>\n        `;\n  }\n\n  /**\n   * Render file upload progress\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileUploadTemplate(fileItem: MgtFileUploadItem) {\n    return html`\n    <div class='file-upload-cell'>\n      <div class='file-upload-table file-upload-name' >\n        <div class='file-upload-cell'>\n          <div title=\"${fileItem.file.name}\" class='file-upload-filename'>${fileItem.file.name}</div>\n        </div>\n      </div>\n      <div class='file-upload-table'>\n        <div class='file-upload-cell'>\n          <div class=\"${fileItem.completed ? 'file-upload-table' : 'file-upload-table upload'}\">\n            <fluent-progress class=\"file-upload-bar\" value=\"${fileItem.percent}\" ></fluent-progress>\n            <div class='file-upload-cell' style=\"padding-left:5px\">\n              <span>${fileItem.percent}%</span>\n              <span\n                class=\"file-upload-cancel\"\n                @click=${e => this.deleteFileUploadSession(fileItem)}>\n                ${getSvg(SvgIcon.Cancel)}\n              </span>\n            </div>\n          <div>\n        </div>\n      </div>\n    </div>\n    `;\n  }\n\n  /**\n   * Handle the \"Upload Files\" button click event to open dialog and select files.\n   *\n   * @param event\n   * @returns\n   */\n  protected async onFileUploadChange(event) {\n    if (!event || event.target.files.length < 1) {\n      return;\n    } else {\n      this.getSelectedFiles(await this.getFilesFromUploadArea(event.target.files));\n      event.target.value = null;\n    }\n  }\n\n  /**\n   * Handle the click event on upload file button that open select files dialog to upload.\n   *\n   */\n  protected onFileUploadClick() {\n    const uploadInput: HTMLElement = this.renderRoot.querySelector('#file-upload-input');\n    uploadInput.click();\n  }\n\n  /**\n   * Function delete existing file upload sessions\n   *\n   * @param fileItem\n   */\n  protected async deleteFileUploadSession(fileItem: MgtFileUploadItem) {\n    try {\n      if (fileItem.uploadUrl !== undefined) {\n        // Responses that confirm cancelation of session.\n        // 404 means (The upload session was not found/The resource could not be found/)\n        // 409 means The resource has changed since the caller last read it; usually an eTag mismatch\n        const response = await deleteSessionFile(this.fileUploadList.graph, fileItem.uploadUrl);\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      } else {\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      }\n    } catch {\n      fileItem.uploadUrl = undefined;\n      fileItem.completed = true;\n      this.setUploadFail(fileItem, strings.cancelUploadFile);\n    }\n  }\n\n  /**\n   * Stop listeners from onDragOver event.\n   *\n   * @param event\n   */\n  protected handleonDragOver = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = event.dataTransfer.dropEffect = this._dropEffect;\n    }\n  };\n\n  /**\n   * Stop listeners from onDragEnter event, enable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragEnter = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter++;\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = this._dropEffect;\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.add('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from ondragenter event, disable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragLeave = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter--;\n    if (this._dragCounter === 0) {\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.remove('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from onDrop event and process files.\n   *\n   * @param event\n   */\n  protected handleonDrop = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n    dragFileBorder.classList.remove('visible');\n    if (event.dataTransfer && event.dataTransfer.items) {\n      this.getSelectedFiles(await this.getFilesFromUploadArea(event.dataTransfer.items));\n    }\n    event.dataTransfer.clearData();\n    this._dragCounter = 0;\n  };\n\n  /**\n   * Get Files and initalize MgtFileUploadItem object life cycle to be uploaded\n   *\n   * @param inputFiles\n   */\n  protected async getSelectedFiles(files: File[]) {\n    let fileItems: MgtFileUploadItem[] = [];\n    const fileItemsCompleted: MgtFileUploadItem[] = [];\n    this._applyAll = false;\n    this._applyAllConflitBehavior = null;\n    this._maximumFileSize = false;\n    this._excludedFileType = false;\n\n    // Collect ongoing upload files\n    this.filesToUpload.forEach(async fileItem => {\n      if (!fileItem.completed) {\n        fileItems.push(fileItem);\n      } else {\n        fileItemsCompleted.push(fileItem);\n      }\n    });\n\n    for (const file of files as FileWithPath[]) {\n      const fullPath = file.fullPath === '' ? '/' + file.name : file.fullPath;\n      if (fileItems.filter(item => item.fullPath === fullPath).length === 0) {\n        // Initialize variable for File validation\n        let acceptFile = true;\n\n        // Exclude file based on max file size allowed\n        if (this.fileUploadList.maxFileSize !== undefined && acceptFile) {\n          if (file.size > this.fileUploadList.maxFileSize * 1024) {\n            acceptFile = false;\n            if (this._maximumFileSize === false) {\n              const maximumFileSize: (number | true)[] = await this.getFileUploadStatus(\n                file,\n                fullPath,\n                'MaxFileSize',\n                this.fileUploadList\n              );\n              if (maximumFileSize !== null) {\n                if (maximumFileSize[0] === 1) {\n                  this._maximumFileSize = true;\n                }\n              }\n            }\n          }\n        }\n\n        // Exclude file based on File extensions\n        if (this.fileUploadList.excludedFileExtensions !== undefined) {\n          if (this.fileUploadList.excludedFileExtensions.length > 0 && acceptFile) {\n            if (\n              this.fileUploadList.excludedFileExtensions.filter(fileExtension => {\n                return file.name.toLowerCase().indexOf(fileExtension.toLowerCase()) > -1;\n              }).length > 0\n            ) {\n              acceptFile = false;\n              if (this._excludedFileType === false) {\n                const excludedFileType: (number | true)[] = await this.getFileUploadStatus(\n                  file,\n                  fullPath,\n                  'ExcludedFileType',\n                  this.fileUploadList\n                );\n                if (excludedFileType !== null) {\n                  if (excludedFileType[0] === 1) {\n                    this._excludedFileType = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Collect accepted files\n        if (acceptFile) {\n          const conflictBehavior: (number | true)[] = await this.getFileUploadStatus(\n            file,\n            fullPath,\n            'Upload',\n            this.fileUploadList\n          );\n          let _completed = false;\n          if (conflictBehavior !== null) {\n            if (conflictBehavior[0] === -1) {\n              _completed = true;\n            } else {\n              this._applyAll = Boolean(conflictBehavior[0]);\n              this._applyAllConflitBehavior = conflictBehavior[1] ? 1 : 0;\n            }\n          }\n\n          // Initialize MgtFileUploadItem Life cycle\n          fileItems.push({\n            file,\n            driveItem: {\n              name: file.name\n            },\n            fullPath,\n            conflictBehavior: conflictBehavior !== null ? (conflictBehavior[1] ? 1 : 0) : null,\n            iconStatus: null,\n            percent: 1,\n            view: ViewType.image,\n            completed: _completed,\n            maxSize: this._maxChunckSize,\n            minSize: 0\n          });\n        }\n      }\n    }\n    fileItems = fileItems.sort((firstFile, secondFile) => {\n      return firstFile.fullPath\n        .substring(0, firstFile.fullPath.lastIndexOf('/'))\n        .localeCompare(secondFile.fullPath.substring(0, secondFile.fullPath.lastIndexOf('/')));\n    });\n    // remove completed file report image to be reuploaded.\n    fileItems.forEach(fileItem => {\n      if (fileItemsCompleted.filter(item => item.fullPath === fileItem.fullPath).length !== 0) {\n        const index = fileItemsCompleted.findIndex(item => item.fullPath === fileItem.fullPath);\n        fileItemsCompleted.splice(index, 1);\n      }\n    });\n    fileItems.push(...fileItemsCompleted);\n    this.filesToUpload = fileItems;\n    // Send multiple Files to upload\n    this.filesToUpload.forEach(async fileItem => {\n      await this.sendFileItemGraph(fileItem);\n    });\n  }\n\n  /**\n   * Call modal dialog to replace or keep file.\n   *\n   * @param file\n   * @returns\n   */\n  protected async getFileUploadStatus(\n    file: File,\n    fullPath: string,\n    DialogStatus: string,\n    fileUploadList: MgtFileUploadConfig\n  ) {\n    const fileUploadDialog: HTMLElement = this.renderRoot.querySelector('#file-upload-dialog');\n\n    switch (DialogStatus) {\n      case 'Upload':\n        const driveItem = await getGraphfile(this.fileUploadList.graph, `${this.getGrapQuery(fullPath)}?$select=id`);\n        if (driveItem !== null) {\n          if (this._applyAll === true) {\n            return [this._applyAll, this._applyAllConflitBehavior];\n          }\n          fileUploadDialog.classList.add('visible');\n          this._dialogTitle = strings.fileReplaceTitle;\n          this._dialogContent = strings.fileReplace.replace('{FileName}', file.name);\n          this._dialogCheckBox = strings.checkApplyAll;\n          this._dialogPrimaryButton = strings.buttonReplace;\n          this._dialogSecondaryButton = strings.buttonKeep;\n          super.requestStateUpdate(true);\n\n          return new Promise<number[]>(async resolve => {\n            const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n            const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n            const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n            const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n            fileUploadDialogCheck.checked = false;\n            fileUploadDialogCheck.classList.remove('hide');\n\n            // Remove and include event listener to validate options.\n            fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.removeEventListener('click', onCloseDialogClick);\n            fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.addEventListener('click', onCloseDialogClick);\n\n            // Replace File\n            // tslint:disable-next-line: completed-docs\n            function onOkDialogClick() {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, MgtFileUploadConflictBehavior.replace]);\n            }\n\n            // Rename File\n            // tslint:disable-next-line: completed-docs\n            function onCancelDialogClick() {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, MgtFileUploadConflictBehavior.rename]);\n            }\n\n            // Cancel File\n            // tslint:disable-next-line: completed-docs\n            function onCloseDialogClick() {\n              fileUploadDialog.classList.remove('visible');\n              resolve([-1]);\n            }\n          });\n        } else {\n          return null;\n        }\n        break;\n      case 'ExcludedFileType':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.fileTypeTitle;\n        this._dialogContent =\n          strings.fileType.replace('{FileName}', file.name) +\n          ' (' +\n          fileUploadList.excludedFileExtensions.join(',') +\n          ')';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        super.requestStateUpdate(true);\n\n        return new Promise<number[]>(async resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n\n          // tslint:disable-next-line: completed-docs\n          function onOkDialogClick() {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          }\n\n          // tslint:disable-next-line: completed-docs\n          function onCancelDialogClick() {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          }\n        });\n      case 'MaxFileSize':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.maximumFileSizeTitle;\n        this._dialogContent =\n          strings.maximumFileSize\n            .replace('{FileSize}', formatBytes(fileUploadList.maxFileSize))\n            .replace('{FileName}', file.name) +\n          formatBytes(file.size) +\n          '.';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        super.requestStateUpdate(true);\n\n        return new Promise<number[]>(async resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n\n          // tslint:disable-next-line: completed-docs\n          function onOkDialogClick() {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          }\n\n          // tslint:disable-next-line: completed-docs\n          function onCancelDialogClick() {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          }\n        });\n\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Get GraphQuery based on pre defined parameters.\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected getGrapQuery(fullPath: string) {\n    let itemPath = '';\n    if (this.fileUploadList.itemPath) {\n      if (this.fileUploadList.itemPath.length > 0) {\n        itemPath =\n          this.fileUploadList.itemPath.substring(0, 1) === '/'\n            ? this.fileUploadList.itemPath\n            : '/' + this.fileUploadList.itemPath;\n      }\n    }\n\n    // {userId} {itemId}\n    if (this.fileUploadList.userId && this.fileUploadList.itemId) {\n      return `/users/${this.fileUploadList.userId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {userId} {itemPath}\n    if (this.fileUploadList.userId && this.fileUploadList.itemPath) {\n      return `/users/${this.fileUploadList.userId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {groupId} {itemId}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemId) {\n      return `/groups/${this.fileUploadList.groupId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {groupId} {itemPath}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemPath) {\n      return `/groups/${this.fileUploadList.groupId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {driveId} {itemId}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemId) {\n      return `/drives/${this.fileUploadList.driveId}/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {driveId} {itemPath}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemPath) {\n      return `/drives/${this.fileUploadList.driveId}/root:${itemPath}${fullPath}`;\n    }\n    // {siteId} {itemId}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemId) {\n      return `/sites/${this.fileUploadList.siteId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {siteId} {itemPath}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemPath) {\n      return `/sites/${this.fileUploadList.siteId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive {itemId}\n    if (this.fileUploadList.itemId) {\n      return `/me/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // default OneDrive {itemPath}\n    if (this.fileUploadList.itemPath) {\n      return `/me/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive root\n    return `/me/drive/root:${fullPath}`;\n  }\n\n  /**\n   * Send file using Upload using Graph based on length\n   *\n   * @param fileUpload\n   * @returns\n   */\n  protected async sendFileItemGraph(fileItem: MgtFileUploadItem) {\n    const graph: IGraph = this.fileUploadList.graph;\n    let graphQuery = '';\n    if (fileItem.file.size < this._maxChunckSize) {\n      try {\n        if (!fileItem.completed) {\n          if (\n            fileItem.conflictBehavior === null ||\n            fileItem.conflictBehavior === MgtFileUploadConflictBehavior.replace\n          ) {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content`;\n          }\n          if (fileItem.conflictBehavior === MgtFileUploadConflictBehavior.rename) {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content?@microsoft.graph.conflictBehavior=rename`;\n          }\n          fileItem.driveItem = await sendFileContent(graph, graphQuery, fileItem.file);\n          if (fileItem.driveItem !== null) {\n            this.setUploadSuccess(fileItem);\n          } else {\n            fileItem.driveItem = {\n              name: fileItem.file.name\n            };\n            this.setUploadFail(fileItem, strings.failUploadFile);\n          }\n        }\n      } catch (error) {\n        this.setUploadFail(fileItem, strings.failUploadFile);\n      }\n    } else {\n      if (!fileItem.completed) {\n        if (fileItem.uploadUrl === undefined) {\n          const response = await getUploadSession(\n            graph,\n            `${this.getGrapQuery(fileItem.fullPath)}:/createUploadSession`,\n            fileItem.conflictBehavior\n          );\n          try {\n            if (response !== null) {\n              // uploadSession url used to send chuncks of file\n              fileItem.uploadUrl = response.uploadUrl;\n              const driveItem = await this.sendSessionUrlGraph(graph, fileItem);\n              if (driveItem !== null) {\n                fileItem.driveItem = driveItem;\n                this.setUploadSuccess(fileItem);\n              } else {\n                this.setUploadFail(fileItem, strings.failUploadFile);\n              }\n            } else {\n              this.setUploadFail(fileItem, strings.failUploadFile);\n            }\n          } catch {}\n        }\n      }\n    }\n  }\n\n  /**\n   * Manage slices of File to upload file by chuncks using Graph and Session Url\n   *\n   * @param Graph\n   * @param fileItem\n   * @returns\n   */\n  protected async sendSessionUrlGraph(graph: IGraph, fileItem: MgtFileUploadItem) {\n    while (fileItem.file.size > fileItem.minSize) {\n      if (fileItem.mimeStreamString === undefined) {\n        fileItem.mimeStreamString = (await this.readFileContent(fileItem.file)) as ArrayBuffer;\n      }\n      // Graph client API uses Buffer package to manage ArrayBuffer, change to Blob avoids external package dependency\n      const fileSlice: Blob = new Blob([fileItem.mimeStreamString.slice(fileItem.minSize, fileItem.maxSize)]);\n      fileItem.percent = Math.round((fileItem.maxSize / fileItem.file.size) * 100);\n      super.requestStateUpdate(true);\n\n      if (fileItem.uploadUrl !== undefined) {\n        const response = await sendFileChunck(\n          graph,\n          fileItem.uploadUrl,\n          `${fileItem.maxSize - fileItem.minSize}`,\n          `bytes ${fileItem.minSize}-${fileItem.maxSize - 1}/${fileItem.file.size}`,\n          fileSlice\n        );\n        if (response === null) {\n          return null;\n        } else if (response.id !== undefined) {\n          return response as DriveItem;\n        } else if (response.nextExpectedRanges !== undefined) {\n          // Define next Chunck\n          fileItem.minSize = parseInt(response.nextExpectedRanges[0].split('-')[0]);\n          fileItem.maxSize = fileItem.minSize + this._maxChunckSize;\n          if (fileItem.maxSize > fileItem.file.size) {\n            fileItem.maxSize = fileItem.file.size;\n          }\n        }\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Success\n   *\n   * @param fileUpload\n   */\n  protected setUploadSuccess(fileUpload: MgtFileUploadItem) {\n    fileUpload.percent = 100;\n    super.requestStateUpdate(true);\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Success);\n      fileUpload.view = ViewType.twolines;\n      fileUpload.fieldUploadResponse = 'lastModifiedDateTime';\n      fileUpload.completed = true;\n      super.requestStateUpdate(true);\n      clearFilesCache();\n    }, 500);\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Fail\n   *\n   * @param fileUpload\n   */\n  protected setUploadFail(fileUpload: MgtFileUploadItem, errorMessage: string) {\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Fail);\n      fileUpload.view = ViewType.twolines;\n      fileUpload.driveItem.description = errorMessage;\n      fileUpload.fieldUploadResponse = 'description';\n      fileUpload.completed = true;\n      super.requestStateUpdate(true);\n    }, 500);\n  }\n\n  /**\n   * Retrieve File content as ArrayBuffer\n   *\n   * @param file\n   * @returns\n   */\n  protected readFileContent(file: File): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n      const myReader: FileReader = new FileReader();\n\n      myReader.onloadend = e => {\n        resolve(myReader.result);\n      };\n\n      myReader.onerror = e => {\n        reject(e);\n      };\n\n      myReader.readAsArrayBuffer(file);\n    });\n  }\n\n  /**\n   * Collect Files from Upload Area based on maxUploadFile\n   *\n   * @param uploadFilesItems\n   * @returns\n   */\n  protected async getFilesFromUploadArea(filesItems) {\n    const folders = [];\n    let entry: any;\n    const collectFilesItems: File[] = [];\n\n    for (const uploadFileItem of filesItems) {\n      if (uploadFileItem.kind === 'file') {\n        // Defensive code to validate if function exists in Browser\n        // Collect all Folders into Array\n        if (uploadFileItem.getAsEntry) {\n          entry = uploadFileItem.getAsEntry();\n          if (entry.isDirectory) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              file.fullPath = '';\n              collectFilesItems.push(file);\n            }\n          }\n        } else if (uploadFileItem.webkitGetAsEntry) {\n          entry = uploadFileItem.webkitGetAsEntry();\n          if (entry.isDirectory) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              file.fullPath = '';\n              collectFilesItems.push(file);\n            }\n          }\n        } else if ('function' == typeof uploadFileItem.getAsFile) {\n          const file = uploadFileItem.getAsFile();\n          if (file) {\n            file.fullPath = '';\n            collectFilesItems.push(file);\n          }\n        }\n        continue;\n      } else {\n        const fileItem = uploadFileItem;\n        if (fileItem) {\n          fileItem.fullPath = '';\n          collectFilesItems.push(fileItem);\n        }\n      }\n    }\n    // Collect Files from folder\n    if (folders.length > 0) {\n      const folderFiles = await this.getFolderFiles(folders);\n      collectFilesItems.push(...folderFiles);\n    }\n    return collectFilesItems;\n  }\n\n  /**\n   * Retrieve files from folder and subfolders to array.\n   *\n   * @param folders\n   * @returns\n   */\n  protected getFolderFiles(folders) {\n    return new Promise<File[]>(resolve => {\n      let reading = 0;\n      const contents: File[] = [];\n      folders.forEach(entry => {\n        readEntry(entry, '');\n      });\n\n      // tslint:disable-next-line: completed-docs\n      function readEntry(entry, path) {\n        if (entry.isDirectory) {\n          readReaderContent(entry.createReader());\n        } else {\n          reading++;\n          entry.file(file => {\n            reading--;\n            // Include Folder path where File is located\n            file.fullPath = path;\n            contents.push(file);\n\n            if (reading === 0) {\n              resolve(contents);\n            }\n          });\n        }\n      }\n\n      // tslint:disable-next-line: completed-docs\n      function readReaderContent(reader) {\n        reading++;\n\n        reader.readEntries(entries => {\n          reading--;\n          for (const entry of entries) {\n            readEntry(entry, entry.fullPath);\n          }\n\n          if (reading === 0) {\n            resolve(contents);\n          }\n        });\n      }\n    });\n  }\n}\n"]}
{"version":3,"file":"mgt-picker.js","sourceRoot":"src/","sources":["components/mgt-picker/mgt-picker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { MgtTemplatedComponent, mgtHtml, customElement } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\n\nregisterFluentComponents(fluentCombobox, fluentOption);\n\n/**\n * Web component that allows a single entity pick from a generic endpoint from Graph. Uses mgt-get.\n *\n * @fires {CustomEvent<any>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedComponent}\n */\n// @customElement('mgt-picker')\n@customElement('picker')\nexport class MgtPicker extends MgtTemplatedComponent {\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version: string = 'v1.0';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'max-pages',\n    type: Number\n  })\n  public maxPages: number = 3;\n\n  /**\n   * A placeholder for the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Key to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'key-name',\n    type: String\n  })\n  public keyName: string;\n\n  /**\n   * Entity to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'entity-type',\n    type: String\n  })\n  public entityType: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled: boolean = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod: number = 0;\n\n  private isRefreshing: boolean;\n\n  @state() private response: any[];\n  @state() private error: any[];\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.entityType = null;\n    this.keyName = null;\n    this.isRefreshing = false;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtPicker\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    this.requestStateUpdate(hardRefresh);\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPicker\n   */\n  protected clearState(): void {\n    this.response = null;\n    this.error = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    if (this.isLoadingState && !this.response) {\n      return this.renderTemplate('loading', null);\n    } else if (this.hasTemplate('error')) {\n      return this.renderTemplate('error', this.error ? this.error : null, 'error');\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    }\n\n    return this.response?.length > 0 ? this.renderPicker() : this.renderGet();\n  }\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox id=\"combobox\" autocomplete=\"list\" placeholder=${this.placeholder}>\n        ${this.response.map(\n          item => html`\n          <fluent-option value=${item.id} @click=${e => this.handleClick(e, item)}> ${\n            item[this.keyName]\n          } </fluent-option>`\n        )}\n      </fluent-combobox>\n     `;\n  }\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderGet(): TemplateResult {\n    return mgtHtml`\n      <mgt-get \n        resource=${this.resource}\n        version=${this.version} \n        scopes=${this.scopes} \n        max-pages=${this.maxPages} \n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPicker\n   */\n  protected async loadState() {\n    if (!this.response) {\n      let parent = this.renderRoot.querySelector('mgt-get');\n      parent.addEventListener('dataChange', (e): void => this.handleDataChange(e));\n    }\n    this.isRefreshing = false;\n  }\n\n  private handleDataChange(e: any): void {\n    let response = e.detail.response.value;\n    let error = e.detail.error ? e.detail.error : null;\n    this.response = response;\n    this.error = error;\n  }\n\n  private handleClick(e: MouseEvent, item: any) {\n    this.fireCustomEvent('selectionChanged', item);\n  }\n}\n"]}